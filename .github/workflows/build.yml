name: Publish docs via GitHub Pages
on:
  push:
    branches:
      - main

jobs:
  lint:
    name: Markdown Lint
    # Set the agent to run on
    runs-on: ubuntu-latest
    ##################
    # Load all steps #
    ##################
    steps:
      ##########################
      # Checkout the code base #
      ##########################
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          # Full git history is needed to get a proper list of changed files within `super-linter`
          fetch-depth: 0

      ################################
      # Run Linter against code base #
      ################################
      - name: Lint Code Base
        #uses: github/super-linter@v3.13.1
        # Workaround for https://github.com/github/super-linter/issues/938
        uses: docker://github/super-linter:v3.13.1
        env:
          VALIDATE_ALL_CODEBASE: true
          VALIDATE_MARKDOWN: true
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          LINTER_RULES_PATH: /
          MARKDOWN_CONFIG_FILE: .markdownlint.json
    
  linkcheck:
    name: Links
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@master
      # https://github.com/marketplace/actions/markdown-link-check
      - uses: gaurav-nelson/github-action-markdown-link-check@v1

  spellCheck:
    name: Spelling
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - uses: rojopolis/spellcheck-github-actions@0.5.0
      name: Spellcheck

  StyleCheck:
    name: Style and Voice
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@master
    - name: Style check
      uses: errata-ai/vale-action@v1.3.0
      with:
        styles: |
          https://github.com/errata-ai/Microsoft/releases/latest/download/Microsoft.zip
          https://github.com/errata-ai/write-good/releases/latest/download/write-good.zip
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
  build:
    runs-on: ubuntu-latest
    # container: Docker/Dockerfile
    name: Build mkdocs + marp
    steps:   
      - name: Checkout code
        uses: actions/checkout@v2 
        with:
            clean: true
            token: ${{ github.token }}

      - name: Copy requirements.txt
        run: cp requirements.txt .github/actions/build

      - name: Build docs
        id: build
        uses: ./.github/actions/build
        # with: # Set the secret as an input
        #   MARP_INPUT_PATH:  slidedecks/kubernetes-overview/README.md
        #   MARP_OUTPUT_PATH: docs/Kubernetes/kubernetes-overview/README.html

              # - name: Build docs
      #   run: |
      #       marp slidedecks/kubernetes-overview/README.md -o docs/Kubernetes/kubernetes-overview/README.html
      #       cp -r slidedecks/kubernetes-overview/img docs/Kubernetes/kubernetes-overview/
      #       mkdocs build


    # runs-on: ubuntu-latest
    # steps:
    #   - name: Checkout master
    #     uses: actions/checkout@v1
      
    #   - run: echo Hello ${{ inputs.who-to-greet }}.
    #     shell: bash

    #   - name: Deploy docs
    #     uses: mhausenblas/mkdocs-deploy-gh-pages@master
    #     env:
    #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #       CUSTOM_DOMAIN: github.io